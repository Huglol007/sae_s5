security:
    # Gestion des hashages de mot de passe
    password_hashers:
        App\Entity\User:
            algorithm:  plaintext
    # Gestion des providers utilisateurs
    providers:
        users_in_memory:
            memory: null

        # Provider personnalisé si tu as une entité `User`
        app_user_provider:
            entity:
                class: App\Entity\User
                property: username



    firewalls:
        # Pare-feu pour les ressources non sécurisées (CSS, JS, images)
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Pare-feu principal
        main:
            lazy: true
            provider: app_user_provider
            form_login:
                login_path: app_login
                check_path: app_login
                enable_csrf: true
                default_target_path: app_home # Route vers laquelle rediriger après connexion

            # Gestion de l'authentification via formulaire



            # Gestion de la déconnexion
            logout:
                path: app_logout      # Route pour la déconnexion
                target: app_login     # Redirection après déconnexion

            # Désactive temporairement la session (utile pour tests/debug)
            # stateless: true

            # Autres méthodes d'authentification possibles (ajoute-les si besoin)
            # http_basic: true
            # json_login:
            #     check_path: /api/login

    # Contrôle d'accès
    access_control:
        # Autorise l'accès non authentifié à la page de connexion


when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10
